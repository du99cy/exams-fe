{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, Input, EventEmitter, forwardRef, ChangeDetectionStrategy, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i2 from '@angular/material/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { FormControl, Validators, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1$1 from '@angular/material/progress-bar';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { animation, style, animate, keyframes, trigger, transition, query, stagger, animateChild, useAnimation } from '@angular/animations';\nimport * as i1$2 from '@angular/material/card';\nimport { MatCardModule } from '@angular/material/card';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nfunction MatPasswordStrengthInfoComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"@flipY\", undefined);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@positiveState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r9.matIconDone);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_2_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@negativeState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r11.matIconError);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, MatPasswordStrengthInfoComponent_div_2_div_1_Template, 1, 1, \"div\", 2);\n    i0.ɵɵtemplate(2, MatPasswordStrengthInfoComponent_div_2_ng_template_2_Template, 2, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, MatPasswordStrengthInfoComponent_div_2_ng_template_4_Template, 2, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r8 = i0.ɵɵreference(3);\n\n    const _r10 = i0.ɵɵreference(5);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@items\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.passwordComponent.containAtLeastOneLowerCaseLetter)(\"ngIfThen\", _r8)(\"ngIfElse\", _r10);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.lowerCaseCriteriaMsg);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_3_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@positiveState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r14.matIconDone);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_3_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@negativeState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r16.matIconError);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, MatPasswordStrengthInfoComponent_div_3_div_1_Template, 1, 0, \"div\", 2);\n    i0.ɵɵtemplate(2, MatPasswordStrengthInfoComponent_div_3_ng_template_2_Template, 2, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, MatPasswordStrengthInfoComponent_div_3_ng_template_4_Template, 2, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r13 = i0.ɵɵreference(3);\n\n    const _r15 = i0.ɵɵreference(5);\n\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@items\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.passwordComponent.containAtLeastOneUpperCaseLetter)(\"ngIfThen\", _r13)(\"ngIfElse\", _r15);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r1.upperCaseCriteriaMsg);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@positiveState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r19.matIconDone);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_4_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@negativeState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r21.matIconError);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, MatPasswordStrengthInfoComponent_div_4_div_1_Template, 1, 0, \"div\", 2);\n    i0.ɵɵtemplate(2, MatPasswordStrengthInfoComponent_div_4_ng_template_2_Template, 2, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, MatPasswordStrengthInfoComponent_div_4_ng_template_4_Template, 2, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r18 = i0.ɵɵreference(3);\n\n    const _r20 = i0.ɵɵreference(5);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@items\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.passwordComponent.containAtLeastOneDigit)(\"ngIfThen\", _r18)(\"ngIfElse\", _r20);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r2.digitsCriteriaMsg);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_5_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@positiveState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r24.matIconDone);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_5_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@negativeState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r26.matIconError);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, MatPasswordStrengthInfoComponent_div_5_div_1_Template, 1, 0, \"div\", 2);\n    i0.ɵɵtemplate(2, MatPasswordStrengthInfoComponent_div_5_ng_template_2_Template, 2, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, MatPasswordStrengthInfoComponent_div_5_ng_template_4_Template, 2, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r23 = i0.ɵɵreference(3);\n\n    const _r25 = i0.ɵɵreference(5);\n\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@items\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.passwordComponent.containAtLeastOneSpecialChar)(\"ngIfThen\", _r23)(\"ngIfElse\", _r25);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r3.specialCharsCriteriaMsg);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_6_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@positiveState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r29.matIconDone);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_6_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@negativeState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r31.matIconError);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, MatPasswordStrengthInfoComponent_div_6_div_1_Template, 1, 0, \"div\", 2);\n    i0.ɵɵtemplate(2, MatPasswordStrengthInfoComponent_div_6_ng_template_2_Template, 2, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, MatPasswordStrengthInfoComponent_div_6_ng_template_4_Template, 2, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r28 = i0.ɵɵreference(3);\n\n    const _r30 = i0.ɵɵreference(5);\n\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@items\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.passwordComponent.containAtLeastMinChars)(\"ngIfThen\", _r28)(\"ngIfElse\", _r30);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r4.minCharsCriteriaMsg);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_7_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r34 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@positiveState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r34.matIconDone);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_7_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@negativeState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r36.matIconError);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, MatPasswordStrengthInfoComponent_div_7_div_1_Template, 1, 0, \"div\", 2);\n    i0.ɵɵtemplate(2, MatPasswordStrengthInfoComponent_div_7_ng_template_2_Template, 2, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, MatPasswordStrengthInfoComponent_div_7_ng_template_4_Template, 2, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r33 = i0.ɵɵreference(3);\n\n    const _r35 = i0.ɵɵreference(5);\n\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@items\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.passwordComponent.containAtCustomChars)(\"ngIfThen\", _r33)(\"ngIfElse\", _r35);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r5.customCharsCriteriaMsg);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@positiveState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r39.matIconDone);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_8_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r41 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"@negativeState\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r41.matIconError);\n  }\n}\n\nfunction MatPasswordStrengthInfoComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵtemplate(1, MatPasswordStrengthInfoComponent_div_8_div_1_Template, 1, 0, \"div\", 2);\n    i0.ɵɵtemplate(2, MatPasswordStrengthInfoComponent_div_8_ng_template_2_Template, 2, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(4, MatPasswordStrengthInfoComponent_div_8_ng_template_4_Template, 2, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r38 = i0.ɵɵreference(3);\n\n    const _r40 = i0.ɵɵreference(5);\n\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"@items\", undefined);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.passwordComponent.strength === 100)(\"ngIfThen\", _r38)(\"ngIfElse\", _r40);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"Password's strength = \", ctx_r6.passwordComponent.strength, \" %100\");\n  }\n}\n\nvar Colors = /*#__PURE__*/(() => {\n  (function (Colors) {\n    Colors[\"primary\"] = \"primary\";\n    Colors[\"accent\"] = \"accent\";\n    Colors[\"warn\"] = \"warn\";\n  })(Colors || (Colors = {}));\n\n  return Colors;\n})();\nvar Criteria = /*#__PURE__*/(() => {\n  (function (Criteria) {\n    Criteria[\"at_least_eight_chars\"] = \"minChar\";\n    Criteria[\"at_least_one_lower_case_char\"] = \"lowerCase\";\n    Criteria[\"at_least_one_upper_case_char\"] = \"upperCase\";\n    Criteria[\"at_least_one_digit_char\"] = \"digit\";\n    Criteria[\"at_least_one_special_char\"] = \" specialChar\";\n    Criteria[\"at_custom_chars\"] = \"customChars\";\n  })(Criteria || (Criteria = {}));\n\n  return Criteria;\n})();\nlet MatPassToggleVisibilityComponent = /*#__PURE__*/(() => {\n  class MatPassToggleVisibilityComponent {\n    get type() {\n      return this.isVisible ? 'text' : 'password';\n    }\n\n  }\n\n  MatPassToggleVisibilityComponent.ɵfac = function MatPassToggleVisibilityComponent_Factory(t) {\n    return new (t || MatPassToggleVisibilityComponent)();\n  };\n\n  MatPassToggleVisibilityComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatPassToggleVisibilityComponent,\n    selectors: [[\"mat-pass-toggle-visibility\"]],\n    inputs: {\n      isVisible: \"isVisible\",\n      tabindex: \"tabindex\"\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[\"mat-icon-button\", \"\", \"matRipple\", \"\", \"matRippleCentered\", \"true\", \"matRipple\", \"\", \"type\", \"button\", 1, \"mat-icon-button\", \"cdk-focused\", \"cdk-mouse-focused\", 3, \"click\"]],\n    template: function MatPassToggleVisibilityComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function MatPassToggleVisibilityComponent_Template_button_click_0_listener() {\n          return ctx.isVisible = !ctx.isVisible;\n        });\n        i0.ɵɵelementStart(1, \"mat-icon\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.tabindex ? ctx.tabindex : null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.isVisible ? \"visibility\" : \"visibility_off\");\n      }\n    },\n    directives: [i1.MatIcon, i2.MatRipple],\n    styles: [\"\"],\n    encapsulation: 2\n  });\n  return MatPassToggleVisibilityComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nclass MatPasswordStrengthValidator {\n  isUndefinedOrEmpty(control) {\n    if (!control || !control.value || control.value.length === 0) {\n      return undefined;\n    }\n  }\n\n  validate(criteria, regex) {\n    const validator = control => {\n      this.isUndefinedOrEmpty(control);\n\n      if (!regex.test(control.value)) {\n        const failed = {};\n        failed[criteria] = {\n          actualValue: control.value,\n          requiredPattern: regex\n        };\n        return failed;\n      }\n\n      return undefined;\n    };\n\n    return validator;\n  }\n\n  confirm(password) {\n    const validator = control => {\n      this.isUndefinedOrEmpty(control);\n\n      if (control.value !== password) {\n        return {\n          notConfirmed: {\n            password: password,\n            passwordConfirmation: control.value\n          }\n        };\n      }\n\n      return undefined;\n    };\n\n    return validator;\n  }\n\n}\n\nconst RegExpValidator = {\n  'lowerCase': RegExp(/^(?=.*?[a-z])/),\n  'upperCase': RegExp(/^(?=.*?[A-Z])/),\n  'digit': RegExp(/^(?=.*?[0-9])/),\n  'specialChar': RegExp(/^(?=.*?[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])/)\n};\nlet MatPasswordStrengthComponent = /*#__PURE__*/(() => {\n  class MatPasswordStrengthComponent {\n    constructor() {\n      this.enableLengthRule = true;\n      this.enableLowerCaseLetterRule = true;\n      this.enableUpperCaseLetterRule = true;\n      this.enableDigitRule = true;\n      this.enableSpecialCharRule = true;\n      this.min = 8;\n      this.max = 30;\n      this.warnThreshold = 21;\n      this.accentThreshold = 81;\n      this.onStrengthChanged = new EventEmitter();\n      this.criteriaMap = new Map(); // TO ACCESS VIA CONTENT CHILD\n\n      this.passwordFormControl = new FormControl();\n      this.passwordConfirmationFormControl = new FormControl();\n      this.validatorsArray = [];\n      this.matPasswordStrengthValidator = new MatPasswordStrengthValidator();\n      this._strength = 0;\n\n      this.propagateChange = _ => {};\n    }\n\n    get strength() {\n      return this._strength ? this._strength : 0;\n    }\n\n    get color() {\n      if (this._strength < this.warnThreshold) {\n        return Colors.warn;\n      } else if (this._strength < this.accentThreshold) {\n        return Colors.accent;\n      } else {\n        return Colors.primary;\n      }\n    }\n\n    ngOnInit() {\n      this.setRulesAndValidators();\n    }\n\n    ngOnChanges(changes) {\n      if (changes.externalError && changes.externalError.firstChange || changes.password.isFirstChange()) {\n        return;\n      } else if (changes.externalError && changes.externalError.currentValue) {\n        this._color = Colors.warn;\n        return;\n      } else if (changes.password.previousValue === changes.password.currentValue && !changes.password.firstChange) {\n        this.calculatePasswordStrength();\n      } else {\n        this.password && this.password.length > 0 ? this.calculatePasswordStrength() : this.reset();\n      }\n    }\n\n    parseCustomValidatorsRegex(value = this.customValidator) {\n      if (this.customValidator instanceof RegExp) {\n        return this.customValidator;\n      } else if (typeof this.customValidator === 'string') {\n        return RegExp(this.customValidator);\n      }\n    }\n\n    setRulesAndValidators() {\n      this.validatorsArray = [];\n      this.criteriaMap = new Map();\n      this.passwordConfirmationFormControl.setValidators(Validators.compose([Validators.required, this.matPasswordStrengthValidator.confirm(this.password)]));\n      this.validatorsArray.push(Validators.required);\n\n      if (this.enableLengthRule) {\n        this.criteriaMap.set(Criteria.at_least_eight_chars, RegExp(`^.{${this.min},${this.max}}$`));\n        this.validatorsArray.push(Validators.minLength(this.min));\n        this.validatorsArray.push(Validators.maxLength(this.max));\n      }\n\n      if (this.enableLowerCaseLetterRule) {\n        this.criteriaMap.set(Criteria.at_least_one_lower_case_char, RegExpValidator.lowerCase);\n        this.validatorsArray.push(Validators.pattern(RegExpValidator.lowerCase));\n      }\n\n      if (this.enableUpperCaseLetterRule) {\n        this.criteriaMap.set(Criteria.at_least_one_upper_case_char, RegExpValidator.upperCase);\n        this.validatorsArray.push(Validators.pattern(RegExpValidator.upperCase));\n      }\n\n      if (this.enableDigitRule) {\n        this.criteriaMap.set(Criteria.at_least_one_digit_char, RegExpValidator.digit);\n        this.validatorsArray.push(Validators.pattern(RegExpValidator.digit));\n      }\n\n      if (this.enableSpecialCharRule) {\n        this.criteriaMap.set(Criteria.at_least_one_special_char, RegExpValidator.specialChar);\n        this.validatorsArray.push(Validators.pattern(RegExpValidator.specialChar));\n      }\n\n      if (this.customValidator) {\n        this.criteriaMap.set(Criteria.at_custom_chars, this.parseCustomValidatorsRegex());\n        this.validatorsArray.push(Validators.pattern(this.parseCustomValidatorsRegex()));\n      }\n\n      this.criteriaMap.forEach((value, key) => {\n        this.validatorsArray.push(this.matPasswordStrengthValidator.validate(key, value));\n      });\n      this.passwordFormControl.setValidators(Validators.compose([...this.validatorsArray]));\n      this.Validators = Validators.compose([...this.validatorsArray]);\n    }\n\n    calculatePasswordStrength() {\n      const requirements = [];\n      const unit = 100 / this.criteriaMap.size; // console.log('this.criteriaMap.size = ', this.criteriaMap.size);\n      // console.log('unit = ', unit);\n\n      requirements.push(this.enableLengthRule ? this._containAtLeastMinChars() : false, this.enableLowerCaseLetterRule ? this._containAtLeastOneLowerCaseLetter() : false, this.enableUpperCaseLetterRule ? this._containAtLeastOneUpperCaseLetter() : false, this.enableDigitRule ? this._containAtLeastOneDigit() : false, this.enableSpecialCharRule ? this._containAtLeastOneSpecialChar() : false, this.customValidator ? this._containCustomChars() : false);\n      this._strength = requirements.filter(v => v).length * unit;\n      this.propagateChange(this.strength); // console.log('length = ', this._strength / unit);\n\n      this.onStrengthChanged.emit(this.strength);\n      this.setRulesAndValidators();\n    }\n\n    reset() {\n      this._strength = 0;\n      this.containAtLeastMinChars = this.containAtLeastOneLowerCaseLetter = this.containAtLeastOneUpperCaseLetter = this.containAtLeastOneDigit = this.containAtCustomChars = this.containAtLeastOneSpecialChar = false;\n    }\n\n    writeValue(obj) {\n      if (obj) {\n        this._strength = obj;\n      }\n    }\n\n    registerOnChange(fn) {\n      this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn) {// throw new Error(\"Method not implemented.\");\n    }\n\n    setDisabledState(isDisabled) {// throw new Error(\"Method not implemented.\");\n    }\n\n    _containAtLeastMinChars() {\n      this.containAtLeastMinChars = this.password.length >= this.min;\n      return this.containAtLeastMinChars;\n    }\n\n    _containAtLeastOneLowerCaseLetter() {\n      this.containAtLeastOneLowerCaseLetter = this.criteriaMap.get(Criteria.at_least_one_lower_case_char).test(this.password);\n      return this.containAtLeastOneLowerCaseLetter;\n    }\n\n    _containAtLeastOneUpperCaseLetter() {\n      this.containAtLeastOneUpperCaseLetter = this.criteriaMap.get(Criteria.at_least_one_upper_case_char).test(this.password);\n      return this.containAtLeastOneUpperCaseLetter;\n    }\n\n    _containAtLeastOneDigit() {\n      this.containAtLeastOneDigit = this.criteriaMap.get(Criteria.at_least_one_digit_char).test(this.password);\n      return this.containAtLeastOneDigit;\n    }\n\n    _containAtLeastOneSpecialChar() {\n      this.containAtLeastOneSpecialChar = this.criteriaMap.get(Criteria.at_least_one_special_char).test(this.password);\n      return this.containAtLeastOneSpecialChar;\n    }\n\n    _containCustomChars() {\n      this.containAtCustomChars = this.criteriaMap.get(Criteria.at_custom_chars).test(this.password);\n      return this.containAtCustomChars;\n    }\n\n    ngAfterContentChecked() {\n      if (this.password) {\n        this.calculatePasswordStrength();\n      }\n    }\n\n  }\n\n  MatPasswordStrengthComponent.ɵfac = function MatPasswordStrengthComponent_Factory(t) {\n    return new (t || MatPasswordStrengthComponent)();\n  };\n\n  MatPasswordStrengthComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatPasswordStrengthComponent,\n    selectors: [[\"mat-password-strength\"]],\n    inputs: {\n      password: \"password\",\n      externalError: \"externalError\",\n      enableLengthRule: \"enableLengthRule\",\n      enableLowerCaseLetterRule: \"enableLowerCaseLetterRule\",\n      enableUpperCaseLetterRule: \"enableUpperCaseLetterRule\",\n      enableDigitRule: \"enableDigitRule\",\n      enableSpecialCharRule: \"enableSpecialCharRule\",\n      min: \"min\",\n      max: \"max\",\n      customValidator: \"customValidator\",\n      warnThreshold: \"warnThreshold\",\n      accentThreshold: \"accentThreshold\"\n    },\n    outputs: {\n      onStrengthChanged: \"onStrengthChanged\"\n    },\n    exportAs: [\"matPasswordStrength\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MatPasswordStrengthComponent),\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 2,\n    consts: [[\"mode\", \"determinate\", 3, \"color\", \"value\"]],\n    template: function MatPasswordStrengthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"mat-progress-bar\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"color\", ctx.color)(\"value\", ctx.strength);\n      }\n    },\n    directives: [i1$1.MatProgressBar],\n    styles: [\".green   [_nghost-%COMP%]  .mat-progress-bar.mat-primary .mat-progress-bar-fill:after{background-color:#43a047}\"],\n    changeDetection: 0\n  });\n  return MatPasswordStrengthComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction flipIn(timing, rotateX, rotateY) {\n  const params = {\n    timing: timing,\n    delay: 0,\n    rotateX,\n    rotateY\n  };\n  return animation([style({\n    'backface-visibility': 'visible'\n  }), animate('{{ timing }}s {{ delay }}s ease-in', keyframes([style({\n    opacity: 0,\n    transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n    offset: 0\n  }), style({\n    opacity: 1,\n    transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n    offset: 0.4\n  }), style({\n    transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n    offset: 0.6\n  }), style({\n    transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n    offset: 0.8\n  }), style({\n    transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n    offset: 1\n  })]))], {\n    params\n  });\n}\n\nconst flipInX = flipIn(1, 1, 0);\nconst flipInY = flipIn(1, 0, 1);\nconst shake = animation(animate('{{ timing }}s {{ delay }}s', keyframes([style({\n  transform: 'translate3d(0, 0, 0)',\n  offset: 0\n}), style({\n  transform: 'translate3d(-10px, 0, 0)',\n  offset: 0.1\n}), style({\n  transform: 'translate3d(10px, 0, 0)',\n  offset: 0.2\n}), style({\n  transform: 'translate3d(-10px, 0, 0)',\n  offset: 0.3\n}), style({\n  transform: 'translate3d(10px, 0, 0)',\n  offset: 0.4\n}), style({\n  transform: 'translate3d(-10px, 0, 0)',\n  offset: 0.5\n}), style({\n  transform: 'translate3d(10px, 0, 0)',\n  offset: 0.6\n}), style({\n  transform: 'translate3d(-10px, 0, 0)',\n  offset: 0.7\n}), style({\n  transform: 'translate3d(10px, 0, 0)',\n  offset: 0.8\n}), style({\n  transform: 'translate3d(-10px, 0, 0)',\n  offset: 0.9\n}), style({\n  transform: 'translate3d(0, 0, 0)',\n  offset: 1\n})])), {\n  params: {\n    timing: 1,\n    delay: 0\n  }\n});\nlet MatPasswordStrengthInfoComponent = /*#__PURE__*/(() => {\n  class MatPasswordStrengthInfoComponent {\n    constructor() {\n      this.enableScoreInfo = false;\n      this.lowerCaseCriteriaMsg = 'contains at least one lower character';\n      this.upperCaseCriteriaMsg = 'contains at least one upper character';\n      this.digitsCriteriaMsg = 'contains at least one digit character';\n      this.specialCharsCriteriaMsg = 'contains at least one special character';\n      this.customCharsCriteriaMsg = 'contains at least one custom character';\n      this.matIconDone = 'done';\n      this.matIconError = 'error';\n    }\n\n    ngOnInit() {\n      if (!this.minCharsCriteriaMsg) {\n        this.minCharsCriteriaMsg = `contains at least ${this.passwordComponent.min} characters`;\n      }\n    }\n\n  }\n\n  MatPasswordStrengthInfoComponent.ɵfac = function MatPasswordStrengthInfoComponent_Factory(t) {\n    return new (t || MatPasswordStrengthInfoComponent)();\n  };\n\n  MatPasswordStrengthInfoComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatPasswordStrengthInfoComponent,\n    selectors: [[\"mat-password-strength-info\"]],\n    inputs: {\n      passwordComponent: \"passwordComponent\",\n      enableScoreInfo: \"enableScoreInfo\",\n      lowerCaseCriteriaMsg: \"lowerCaseCriteriaMsg\",\n      upperCaseCriteriaMsg: \"upperCaseCriteriaMsg\",\n      digitsCriteriaMsg: \"digitsCriteriaMsg\",\n      specialCharsCriteriaMsg: \"specialCharsCriteriaMsg\",\n      customCharsCriteriaMsg: \"customCharsCriteriaMsg\",\n      minCharsCriteriaMsg: \"minCharsCriteriaMsg\",\n      matIconDone: \"matIconDone\",\n      matIconError: \"matIconError\"\n    },\n    exportAs: [\"matPasswordStrengthInfo\"],\n    decls: 9,\n    vars: 8,\n    consts: [[\"class\", \"info-row\", 4, \"ngIf\"], [1, \"info-row\"], [4, \"ngIf\", \"ngIfThen\", \"ngIfElse\"], [\"done\", \"\"], [\"error\", \"\"], [\"color\", \"primary\"], [\"color\", \"warn\"]],\n    template: function MatPasswordStrengthInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\");\n        i0.ɵɵelementStart(1, \"mat-card-content\");\n        i0.ɵɵtemplate(2, MatPasswordStrengthInfoComponent_div_2_Template, 8, 5, \"div\", 0);\n        i0.ɵɵtemplate(3, MatPasswordStrengthInfoComponent_div_3_Template, 8, 5, \"div\", 0);\n        i0.ɵɵtemplate(4, MatPasswordStrengthInfoComponent_div_4_Template, 8, 5, \"div\", 0);\n        i0.ɵɵtemplate(5, MatPasswordStrengthInfoComponent_div_5_Template, 8, 5, \"div\", 0);\n        i0.ɵɵtemplate(6, MatPasswordStrengthInfoComponent_div_6_Template, 8, 5, \"div\", 0);\n        i0.ɵɵtemplate(7, MatPasswordStrengthInfoComponent_div_7_Template, 8, 5, \"div\", 0);\n        i0.ɵɵtemplate(8, MatPasswordStrengthInfoComponent_div_8_Template, 8, 5, \"div\", 0);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"@list\", undefined);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordComponent.enableLowerCaseLetterRule);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordComponent.enableUpperCaseLetterRule);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordComponent.enableDigitRule);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordComponent.enableSpecialCharRule);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordComponent.enableLengthRule);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.passwordComponent.customValidator);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.enableScoreInfo);\n      }\n    },\n    directives: [i1$2.MatCard, i1.MatIcon, i1$2.MatCardContent, i3.NgIf],\n    styles: [\"mat-card[_ngcontent-%COMP%]{flex-direction:row;box-sizing:border-box;display:flex;place-content:stretch center;align-items:stretch;flex:1 1 0}mat-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]{flex-direction:column;box-sizing:border-box;display:flex;max-width:100%;place-content:stretch flex-start;align-items:stretch}mat-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:10px}mat-card[_ngcontent-%COMP%]   mat-card-content[_ngcontent-%COMP%]   .info-row[_ngcontent-%COMP%]{flex-direction:row;box-sizing:border-box;display:flex;align-items:center}\"],\n    data: {\n      animation: [// nice stagger effect when showing existing elements\n      trigger('list', [transition(':enter', [// child animation selector + stagger\n      query('@items', stagger(300, animateChild()))])]), trigger('items', [// cubic-bezier for a tiny bouncing feel\n      transition(':enter', [style({\n        transform: 'scale(0.5)',\n        opacity: 0\n      }), animate('1s cubic-bezier(.8,-0.6,0.2,1.5)', style({\n        transform: 'scale(1)',\n        opacity: 1\n      }))]), transition(':leave', [style({\n        transform: 'scale(1)',\n        opacity: 1,\n        height: '*'\n      }), animate('1s cubic-bezier(.8,-0.6,0.2,1.5)', style({\n        transform: 'scale(0.5)',\n        opacity: 0,\n        height: '0px',\n        margin: '0px'\n      }))])]), trigger('positiveState', [transition(':enter', [style({\n        'backface-visibility': 'visible'\n      }), animate('{{ timing }}s {{ delay }}s ease-in', keyframes([style({\n        opacity: 0,\n        transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n        offset: 0\n      }), style({\n        opacity: 1,\n        transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n        offset: 0.4\n      }), style({\n        transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n        offset: 0.6\n      }), style({\n        transform: 'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n        offset: 0.8\n      }), style({\n        transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n        offset: 1\n      })]))], {\n        params: {\n          timing: 1,\n          delay: 0,\n          rotateX: 1,\n          rotateY: 0\n        }\n      })]), trigger('negativeState', [transition(':enter', useAnimation(shake))])]\n    }\n  });\n  return MatPasswordStrengthInfoComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MatPasswordStrengthModule = /*#__PURE__*/(() => {\n  class MatPasswordStrengthModule {\n    static forRoot() {\n      return {\n        ngModule: MatPasswordStrengthModule,\n        providers: []\n      };\n    }\n\n  }\n\n  MatPasswordStrengthModule.ɵfac = function MatPasswordStrengthModule_Factory(t) {\n    return new (t || MatPasswordStrengthModule)();\n  };\n\n  MatPasswordStrengthModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatPasswordStrengthModule\n  });\n  MatPasswordStrengthModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatProgressBarModule, MatCardModule, MatIconModule, MatRippleModule]]\n  });\n  return MatPasswordStrengthModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/*\n * Public API Surface of password-strength\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { Colors, Criteria, MatPassToggleVisibilityComponent, MatPasswordStrengthComponent, MatPasswordStrengthInfoComponent, MatPasswordStrengthModule, MatPasswordStrengthValidator, RegExpValidator, flipIn, flipInX, flipInY, shake }; //# sourceMappingURL=angular-material-extensions-password-strength.mjs.map","map":null,"metadata":{},"sourceType":"module"}