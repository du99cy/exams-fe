{"ast":null,"code":"import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { AuthService } from './authentication/auth.service';\nimport { APP_CONFIG } from './config';\nimport { AuthGuard } from './guards/auth.guard';\nimport { appInitializer } from './initializer/app.initializer';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { JwtInterceptor } from './interceptors/jwt.interceptor';\nimport * as i0 from \"@angular/core\";\nexport let CoreModule = /*#__PURE__*/(() => {\n  class CoreModule {\n    constructor(parentModule) {\n      if (parentModule) {\n        throw new Error('CoreModule is already loaded. Please add it in AppModule only.');\n      }\n    }\n\n    static forRoot(conf) {\n      return {\n        ngModule: CoreModule,\n        providers: [{\n          provide: APP_CONFIG,\n          useValue: conf\n        }]\n      };\n    }\n\n  }\n\n  CoreModule.ɵfac = function CoreModule_Factory(t) {\n    return new (t || CoreModule)(i0.ɵɵinject(CoreModule, 12));\n  };\n\n  CoreModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: CoreModule\n  });\n  CoreModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [{\n      provide: APP_INITIALIZER,\n      useFactory: appInitializer,\n      multi: true,\n      deps: [AuthService]\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true\n    }, {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true\n    }, AuthGuard, AuthService],\n    imports: [[HttpClientModule]]\n  });\n  return CoreModule;\n})();","map":null,"metadata":{},"sourceType":"module"}